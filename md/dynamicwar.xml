<?xml version="1.0" encoding="utf-8"?>
<mdscript name="DynamicWar" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<cue name="Init" version="2">
			<actions>
				<do_if value="(not $ArgonCoalition?) or (not $TeladiCoalition?) or (not $ParanidCoalition?) or (not $HolyOrderCoalition?) or (not $PirateCoalition?)">
					<set_value name="$ArgonCoalition" exact="[faction.antigone, faction.argon, faction.hatikvah]"/>
					<set_value name="$HolyOrderCoalition" exact="[faction.holyorder]"/>
					<set_value name="$ParanidCoalition" exact="[faction.alliance, faction.paranid]"/>
					<set_value name="$TeladiCoalition" exact="[faction.ministry, faction.teladi]"/>
					<set_value name="$PirateCoalition" exact="[faction.scaleplate]"/>
				</do_if>
				<do_if value="(not $ExcludedFactions?)">
					<set_value name="$ExcludedFactions" exact="[faction.buccaneers, faction.civilian, faction.criminal, faction.holyorderfanatic, faction.khaak, faction.player, faction.smuggler, faction.trinity, faction.visitor, faction.xenon]"/>
				</do_if>
				<do_if value="(not $FactionTable?)">
					<set_value name="$FactionTable" exact="table[]" />
				</do_if>
			</actions>
			<patch sinceversion="2">
				<reset_cue cue="this"/>
			</patch>
			<cues>
				<cue name="DynamicWarTimer" instantiate="true" checkinterval="30min" checktime="player.age + 5min">
					<actions>
						<signal_cue_instantly cue="DynamicWarEventSelector" />
					</actions>
				</cue>
				<!-- This is where debug goes
				<cue name="DynamicWarDebug" instantiate="true" >
					<conditions>
						<event_long_range_scan_sent object="player.entity"/>
					</conditions>
					<actions>
						<signal_cue_instantly cue="DynamicWarEventSelector" />
					</actions>
				</cue>
				This is where it ends -->
				<cue name="DynamicWarEventSelector" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<do_if value="$DynamicWarEvent?">
							<remove_value name="$DynamicWarEvent" />
						</do_if>
						<!-- Choose event type -->
						<do_any>
							<set_value name="$DynamicWarEvent" exact="'Besties'" weight="5" />
							<set_value name="$DynamicWarEvent" exact="'BigBoost'" weight="25" />
							<set_value name="$DynamicWarEvent" exact="'SmallBoost'" weight="50" />
							<set_value name="$DynamicWarEvent" exact="'SmallBlow'" weight="50" />
							<set_value name="$DynamicWarEvent" exact="'BigBlow'" weight="25" />
							<set_value name="$DynamicWarEvent" exact="'Nemesis'" weight="5" />
							<set_value name="$DynamicWarEvent" exact="'Nothing'" weight="1" />
						</do_any>
						<!-- Clean up old faction one -->
						<do_if value="$DynamicWarEventFaction?">
							<remove_value name="$DynamicWarEventFaction" />
						</do_if>
						<do_if value="$DynamicWarEventFactionTwo?">
							<remove_value name="$DynamicWarEventFactionTwo" />
						</do_if>
						<!-- If nothing then we don't need to do any more processing -->
						<do_if value="$DynamicWarEvent != 'Nothing'">
							<!-- find factions -->
							<get_factions_by_tag tag="tag.claimspace" result="$Claimspacelist" />
							<create_list name="$Peacefullist" />
							<get_factions_by_tag tag="tag.peaceful" result="$Peacefullist" />
							<!-- print out the results for debug -->
							<set_value name="$ClaimspacelistDebug" exact="player.age + ' Claimspace list unprocessed: '" />
							<do_all exact="$Claimspacelist.count" counter="$ClaimspacelistDebugCounter">
								<set_value name="$ClaimspacelistDebug" exact="$ClaimspacelistDebug + ' #' + $ClaimspacelistDebugCounter + ' ' + $Claimspacelist.{$ClaimspacelistDebugCounter}" />
							</do_all>
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$ClaimspacelistDebug" output="false" append="true" />
							<remove_value name="$ClaimspacelistDebug" />
							<remove_value name="$ClaimspacelistDebugCounter" />
							<append_list_elements name="$Peacefullist" other="$ExcludedFactions" />
							<!-- Remove peaceful factions and excluded factions -->
							<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter" reverse="true">
								<do_if value="$Claimspacelist.{$ClaimspaceCounter}?">
									<do_all exact="$Peacefullist.count" counter="$PeacefullistCounter">
										<do_if value="$Claimspacelist.{$ClaimspaceCounter} == $Peacefullist.{$PeacefullistCounter}">
											<remove_value name="$Claimspacelist.{$ClaimspaceCounter}" />
											<break/>
										</do_if>
									</do_all>
									<remove_value name="$PeacefullistCounter" />
								</do_if>
								<do_if value="$Claimspacelist.{$ClaimspaceCounter}?">
									<do_if value="$Claimspacelist.{$ClaimspaceCounter} == null">
										<remove_value name="$Claimspacelist.{$ClaimspaceCounter}" />
										<continue/>
									</do_if>
								</do_if>
							</do_all>
							<set_value name="$FactionTableList" exact="$Claimspacelist" />
							<remove_value name="$ClaimspaceCounter" />
							<remove_value name="$Peacefullist" />
							<!-- print out the results for debug -->
							<set_value name="$ClaimspacelistDebug" exact="player.age + ' Claimspace list processed: '" />
							<do_all exact="$Claimspacelist.count" counter="$ClaimspacelistDebugCounter">
								<set_value name="$ClaimspacelistDebug" exact="$ClaimspacelistDebug + ' #' + $ClaimspacelistDebugCounter + ' ' + $Claimspacelist.{$ClaimspacelistDebugCounter}" />
							</do_all>
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$ClaimspacelistDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="' '" output="false" append="true" />
							<remove_value name="$ClaimspacelistDebug" />
							<remove_value name="$ClaimspacelistDebugCounter" />
							<!-- Shuffle! -->
							<shuffle_list list="$Claimspacelist"/>
							<!-- Reduce to seven options and cleanup -->
							<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter" reverse="true">
								<do_if value="$ClaimspaceCounter gt 7">
									<remove_value name="$Claimspacelist.{$ClaimspaceCounter}" />
								</do_if>
							</do_all>
							<remove_value name="$ClaimspaceCounter" />
							<!-- Get chance factor -->
							<create_list name="$PossibleFactionChance" />
							<include_actions ref="DynamicWarCalculateChance" />
							<!-- Choose random faction -->
							<do_any>
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{1}? then $Claimspacelist.{1} else null" weight="if ($Claimspacelist.{1}? and $PossibleFactionChance.{1}?) then $PossibleFactionChance.{1} else 0" />
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{2}? then $Claimspacelist.{2} else null" weight="if ($Claimspacelist.{2}? and $PossibleFactionChance.{2}?) then $PossibleFactionChance.{2} else 0" />
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{3}? then $Claimspacelist.{3} else null" weight="if ($Claimspacelist.{3}? and $PossibleFactionChance.{3}?) then $PossibleFactionChance.{3} else 0" />
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{4}? then $Claimspacelist.{4} else null" weight="if ($Claimspacelist.{4}? and $PossibleFactionChance.{4}?) then $PossibleFactionChance.{4} else 0" />
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{5}? then $Claimspacelist.{5} else null" weight="if ($Claimspacelist.{5}? and $PossibleFactionChance.{5}?) then $PossibleFactionChance.{5} else 0" />
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{6}? then $Claimspacelist.{6} else null" weight="if ($Claimspacelist.{6}? and $PossibleFactionChance.{6}?) then $PossibleFactionChance.{6} else 0" />
								<set_value name="$DynamicWarEventFaction" exact="if $Claimspacelist.{7}? then $Claimspacelist.{7} else null" weight="if ($Claimspacelist.{7}? and $PossibleFactionChance.{7}?) then $PossibleFactionChance.{7} else 0" />
							</do_any>
							<!-- Remove selected faction from possible factions since it will be used again -->
							<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter" reverse="true">
								<do_if value="$Claimspacelist.{$ClaimspaceCounter} == $DynamicWarEventFaction">
									<remove_value name="$Claimspacelist.{$ClaimspaceCounter}" />
								</do_if>
							</do_all>
							<!-- Clean up counter, debug, possiblefactionchance and old faction two -->
							<remove_value name="$ClaimspacelistDebug" />
							<remove_value name="$ClaimspacelistDebugCounter" />
							<remove_value name="$PossibleFactionChance" />
							<remove_value name="$ClaimspaceCounter" />
							<!-- Shuffle! -->
							<shuffle_list list="$Claimspacelist"/>
							<!-- Reduce to six options and cleanup -->
							<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter" reverse="true">
								<do_if value="$ClaimspaceCounter gt 6">
									<remove_value name="$Claimspacelist.{$ClaimspaceCounter}" />
								</do_if>
							</do_all>
							<remove_value name="$ClaimspaceCounter" />
							<!-- Get military strength factor -->
							<create_list name="$PossibleFactionMilStrength" />
							<include_actions ref="DynamicWarCalculateMilStrengthFactor" />
							<!-- Get chance factor -->
							<create_list name="$PossibleFactionChance" />
							<include_actions ref="DynamicWarCalculateChance" />
							<!-- Select $FactionTwo -->
							<do_any>
								<set_value name="$DynamicWarEventFactionTwo" exact="if $Claimspacelist.{1}? then $Claimspacelist.{1} else null" weight="if ($Claimspacelist.{1}? and $PossibleFactionMilStrength.{1}? and $PossibleFactionChance.{1}?) then ($PossibleFactionChance.{1} * $PossibleFactionMilStrength.{1}) else 0" />
								<set_value name="$DynamicWarEventFactionTwo" exact="if $Claimspacelist.{2}? then $Claimspacelist.{2} else null" weight="if ($Claimspacelist.{2}? and $PossibleFactionMilStrength.{2}? and $PossibleFactionChance.{2}?) then ($PossibleFactionChance.{2} * $PossibleFactionMilStrength.{2}) else 0" />
								<set_value name="$DynamicWarEventFactionTwo" exact="if $Claimspacelist.{3}? then $Claimspacelist.{3} else null" weight="if ($Claimspacelist.{3}? and $PossibleFactionMilStrength.{3}? and $PossibleFactionChance.{3}?) then ($PossibleFactionChance.{3} * $PossibleFactionMilStrength.{3}) else 0" />
								<set_value name="$DynamicWarEventFactionTwo" exact="if $Claimspacelist.{4}? then $Claimspacelist.{4} else null" weight="if ($Claimspacelist.{4}? and $PossibleFactionMilStrength.{4}? and $PossibleFactionChance.{4}?) then ($PossibleFactionChance.{4} * $PossibleFactionMilStrength.{4}) else 0" />
								<set_value name="$DynamicWarEventFactionTwo" exact="if $Claimspacelist.{5}? then $Claimspacelist.{5} else null" weight="if ($Claimspacelist.{5}? and $PossibleFactionMilStrength.{5}? and $PossibleFactionChance.{5}?) then ($PossibleFactionChance.{5} * $PossibleFactionMilStrength.{5}) else 0" />
								<set_value name="$DynamicWarEventFactionTwo" exact="if $Claimspacelist.{6}? then $Claimspacelist.{6} else null" weight="if ($Claimspacelist.{6}? and $PossibleFactionMilStrength.{6}? and $PossibleFactionChance.{6}?) then ($PossibleFactionChance.{6} * $PossibleFactionMilStrength.{6}) else 0" />
							</do_any>
							<!-- print out the results for debug -->
							<set_value name="$FactionSelectionDebug" exact="player.age + ' - ' + $DynamicWarEvent + ' - ' + $DynamicWarEventFaction + ' and ' + $DynamicWarEventFactionTwo" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug" output="false" append="true" />
							<set_value name="$FactionSelectionDebug" exact="player.age + ' DynamicWarEventFactionTwo possibilities: '" />
							<do_all exact="$Claimspacelist.count" counter="$ClaimspacelistDebugCounter">
								<set_value name="$FactionSelectionDebug" exact="$FactionSelectionDebug + ' #' + $ClaimspacelistDebugCounter + ' ' + $Claimspacelist.{$ClaimspacelistDebugCounter} + ' MilStrengthFactor: ' + $PossibleFactionMilStrength.{$ClaimspacelistDebugCounter}" />
							</do_all>
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug" output="false" append="true" />
							<set_value name="$FactionSelectionDebug" exact="player.age + ' DynamicWarEventFactionTwo chance: '" />
							<remove_value name="$ClaimspacelistDebugCounter" />
							<do_all exact="$Claimspacelist.count" counter="$ClaimspacelistDebugCounter">
								<set_value name="$FactionSelectionDebug" exact="$FactionSelectionDebug + ' #' + $ClaimspacelistDebugCounter + ' ' + $Claimspacelist.{$ClaimspacelistDebugCounter} + ' Chance: ' + $PossibleFactionChance.{$ClaimspacelistDebugCounter}" />
							</do_all>
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="' '" output="false" append="true" />
							<remove_value name="$FactionSelectionDebug" />
							<remove_value name="$ClaimspacelistDebugCounter" />
							<!-- Update chance factor -->
							<include_actions ref="DynamicWarCalculateChance" />
							<!-- Execute the relation changes -->
							<include_actions ref="DynamicWarEventExecute" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'Nothing'">
							<set_value name="$NothingDebug" exact="player.age + ' - ' + $DynamicWarEvent" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$NothingDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<!-- Clean up since this round is done -->
						<remove_value name="$DynamicWarEvent" />
						<remove_value name="$DynamicWarEventFaction" />
						<remove_value name="$DynamicWarEventFactionTwo" />
						<remove_value name="$PossibleFactionChance" />
						<remove_value name="$PossibleFactionMilStrength" />
					</actions>
				</cue>
				<library name="DynamicWarEventExecute">
					<actions>
						<!--Break time -->
						<do_if value="$DynamicWarEvent == 'BigBoost'">
							<set_value name="$FactionOne" exact="$DynamicWarEventFaction" />
							<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo" />
							<set_value name="$BigBoostDebug" exact="'Big Boost - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
							<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
							<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} + 0.1f, 1].min)" />
							<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, 1].min)" />
							<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
							<set_value name="$BigBoostDebug" exact="$BigBoostDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$BigBoostDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBoost'">
							<set_value name="$FactionOne" exact="$DynamicWarEventFaction" />
							<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo" />
							<set_value name="$SmallBoostDebug" exact="'Small Boost - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
							<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
							<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} + 0.0032f, 1].min)" />
							<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, 1].min)" />
							<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
							<set_value name="$SmallBoostDebug" exact="$SmallBoostDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$SmallBoostDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBlow'">
							<set_value name="$FactionOne" exact="$DynamicWarEventFaction" />
							<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo" />
							<set_value name="$SmallBlowDebug" exact="'Small Blow - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
							<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
							<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} - 0.0032f, -1].max)" />
							<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, -1].max)" />
							<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
							<set_value name="$SmallBlowDebug" exact="$SmallBlowDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$SmallBlowDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'BigBlow'">
							<set_value name="$FactionOne" exact="$DynamicWarEventFaction" />
							<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo" />
							<set_value name="$BigBlowDebug" exact="'Big Blow - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
							<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
							<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} - 0.1f, -1].max)" />
							<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, -1].max)" />
							<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
							<set_value name="$BigBlowDebug" exact="$BigBlowDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$BigBlowDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'Nemesis'">
							<set_value name="$FactionOne" exact="$DynamicWarEventFaction" />
							<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo" />
							<set_value name="$NemesisDebug" exact="'Nemesis - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
							<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
							<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="-1.0" />
							<set_value name="$NewRelation" exact="-1.0" />
							<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
							<set_value name="$NemesisDebug" exact="$NemesisDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$NemesisDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'Besties'">
							<set_value name="$FactionOne" exact="$DynamicWarEventFaction" />
							<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo" />
							<set_value name="$BestiesDebug" exact="'Big Boost - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
							<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
							<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} + 0.1f, 1].min)" />
							<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, 1].min)" />
							<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
							<set_value name="$BestiesDebug" exact="$BestiesDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$BestiesDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<include_actions ref="DynamicWarEventNotification" />
					</actions>
				</library>
				<library name="DynamicWarEventNotification">
					<actions>
						<!-- Big ups to Jack the Stripper(marksmango) for ideas-->
						<set_value name="$FactionOneNames" exact="$DynamicWarEventFaction.name" />
						<!-- Grammar is kind of important -->
						<set_value name="$IsAre" exact="' is '" />
						<!-- Repeat for DynamicWarEventFactionTwo -->
						<set_value name="$FactionTwoNames" exact="$DynamicWarEventFactionTwo.name" />
						
						<do_if value="$DynamicWarEvent == 'BigBoost' or ($DynamicWarEvent == 'Besties')">
							<do_if value="($OldRelation ge 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are considered close allies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Completion of a non-agression pact has led to improved relations between ' + $FactionOneNames + ' and ' + $FactionTwoNames + '.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Completion of a joint resources expedition has led to improved relations between ' + $FactionOneNames + ' and ' + $FactionTwoNames + '.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation ge 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are now at peace and considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are now at peace and considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are now at peace and considered close allies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="8" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Completion of a major trade deal between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has led to peace.'" weight="25"/>
									<set_value name="$FlavorText" exact="'After wide scale protests crying for peace, ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' have signed a peace treaty.'" weight="25"/>
									<set_value name="$FlavorText" exact="'After a near disasterous fight with the Xenon. ' + $FactionTwoNames + ' sent ships to save the fleet of ' + $FactionOneNames + '. The two factions decided to settle their differences.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has improved their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has improved their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has improved their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced conflict between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly improved relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced deception between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly improved relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBoost'">
							<do_if value="($OldRelation ge 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slighty improved their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="5" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Increased trade between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly improved relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Increased tourism between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly improved relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation ge 0)">
								<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at peace with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'After a public request by Jack the Stripper, famous highway architect, ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' have ended their war.'" weight="25"/>
									<set_value name="$FlavorText" exact="'An armistice treaty signed by ' + $FactionOneNames + ' and ' + $FactionTwoNames + '. Prisoners have been exchanged and there is a fragile peace for now.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced conflict between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slighty improved relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced deception between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly improved relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBlow'">
							<do_if value="($OldRelation gt 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced trade between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced tourism between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war with their nemesis. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="5" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Increased conflict between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Increased distrust between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation ge 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now enemies with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with their nemesis, ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Citing previous border disputes, ' + $FactionOneNames + ' has declared war on ' + $FactionTwoNames + ' to protect their galactic sovereignty.'" weight="25"/>
									<set_value name="$FlavorText" exact="'After a failed non-agression pact, the relations between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' have deteriorated into a minor conflict.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
						<do_if value="($DynamicWarEvent == 'BigBlow') or ($DynamicWarEvent == 'Nemesis')">
							<do_if value="($OldRelation gt 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced trade between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly worsened relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced tourism between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly worsened relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war with their nemesis. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'A prominent coalition leader of ' + $FactionOneNames + ' has declared to build a wall blocking ' + $FactionTwoNames + ' and to make them pay for it. Relations have greatly worsened'" weight="25"/>
									<set_value name="$FlavorText" exact="'A prominent coalition leader of ' + $FactionOneNames + ' has called for the destruction of ' + $FactionTwoNames + ' during a state of the union address. Relations have greatly worsened'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation ge 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now enemies with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with their nemesis, ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="8" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'A ship carrying water to a station experiencing a critical shortage was destroyed by ' + $FactionTwoNames + ' extremeists. ' + $FactionOneNames + ' has declared war in retaliation.'" weight="25"/>
									<set_value name="$FlavorText" exact="'A coalition ambassador of ' + $FactionOneNames + ' was assasinated. Evidence points to a deep-cover agent of ' + $FactionTwoNames + ' coalition. War has erupted.'" weight="25"/>
									<set_value name="$FlavorText" exact="'A new captain of ' + $FactionTwoNames + ' coalition fired upon a luxury passenger ship belonging to ' + $FactionOneNames + ' coalition, thought to be smuggling criminals. ' + $FactionOneNames + ' swiftly declared war.'" weight="25"/>
									<set_value name="$FlavorText" exact="'A rogue faction logic AI designed by Mysterial has caused phantom fleet orders to invade ' + $FactionTwoNames + ' space. ' + $FactionOneNames + ' has immediately declared all out war.'" weight="25"/>
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
					</actions>
				</library>
				<library name="DynamicWarCalculateMilStrengthFactor">
					<actions>
						<do_if value="$DynamicWarEventFaction? and $DynamicWarEvent?">
							<!-- Comparison favors weakness -->
							<do_if value="($DynamicWarEvent == 'BigBoost') or ($DynamicWarEvent == 'Besties') or ($DynamicWarEvent == 'SmallBoost')">
								<!-- We need to calculate the first factions strength -->
								<find_ship_by_true_owner groupname="$DynamicWarEventFactionMilShips" space="player.galaxy" multiple="true" faction="$DynamicWarEventFaction" primarypurpose="purpose.fight" append="true" />
								<find_sector groupname="$DynamicWarEventFactionSectors" space="player.galaxy" multiple="true" owner="$DynamicWarEventFaction" append="true" />
								<!-- print out results for debug -->
								<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $DynamicWarEvent + ' - ' + $DynamicWarEventFaction + ' - Ships: ' + $DynamicWarEventFactionMilShips.count + ' - Sectors: ' + $DynamicWarEventFactionSectors.count" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
								<!-- Now calculate the possible factions in Claimspacelist -->
								<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter">
									<find_ship_by_true_owner groupname="$PossibleFactionMilShips" space="player.galaxy" multiple="true" faction="$Claimspacelist.{$ClaimspaceCounter}" primarypurpose="purpose.fight" append="true" />
									<find_sector groupname="$PossibleFactionSectors" space="player.galaxy" multiple="true" owner="$Claimspacelist.{$ClaimspaceCounter}" append="true" />
									<append_to_list name="$PossibleFactionMilStrength" exact="[((($DynamicWarEventFactionMilShips.count)f / ($PossibleFactionMilShips.count)f) * (($DynamicWarEventFactionMilShips.count)f / ($PossibleFactionMilShips.count)f) * (($DynamicWarEventFactionSectors.count)f / ($PossibleFactionSectors.count)f) * (($DynamicWarEventFactionSectors.count)f / ($PossibleFactionSectors.count)f)), 5].min" />
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $Claimspacelist.{$ClaimspaceCounter}.name + ' - Ships: ' + $PossibleFactionMilShips.count + ' - Sectors: ' + $PossibleFactionSectors.count + ' - MilStrengthFactor: ' + $PossibleFactionMilStrength.{$ClaimspaceCounter}" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$PossibleFactionMilShips" />
									<remove_value name="$PossibleFactionSectors" />
									<remove_value name="$MilStrengthDebug" />
								</do_all>
								<remove_value name="$DynamicWarEventFactionMilShips" />
								<remove_value name="$DynamicWarEventFactionSectors" />
								<remove_value name="$ClaimspaceCounter" />
							</do_if>
							<!-- Comparison favors strength -->
							<do_if value="($DynamicWarEvent == 'SmallBlow') or ($DynamicWarEvent == 'BigBlow') or ($DynamicWarEvent == 'Nemesis')">
								<!-- We need to calculate the first factions strength -->
								<find_ship_by_true_owner groupname="$DynamicWarEventFactionMilShips" space="player.galaxy" multiple="true" faction="$DynamicWarEventFaction" primarypurpose="purpose.fight" append="true" />
								<find_sector groupname="$DynamicWarEventFactionSectors" space="player.galaxy" multiple="true" owner="$DynamicWarEventFaction" append="true" />
								<!-- print out results for debug -->
								<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $DynamicWarEvent + ' - ' + $DynamicWarEventFaction + ' - Ships: ' + $DynamicWarEventFactionMilShips.count + ' - Sectors: ' + $DynamicWarEventFactionSectors.count" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
								<!-- Now calculate the possible factions in Claimspacelist -->
								<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter">
									<find_ship_by_true_owner groupname="$PossibleFactionMilShips" space="player.galaxy" multiple="true" faction="$Claimspacelist.{$ClaimspaceCounter}" primarypurpose="purpose.fight" append="true" />
									<find_sector groupname="$PossibleFactionSectors" space="player.galaxy" multiple="true" owner="$Claimspacelist.{$ClaimspaceCounter}" append="true" />
									<append_to_list name="$PossibleFactionMilStrength" exact="[((($PossibleFactionMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (($PossibleFactionMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (($PossibleFactionSectors.count)f / ($DynamicWarEventFactionSectors.count)f) * (($PossibleFactionSectors.count)f / ($DynamicWarEventFactionSectors.count)f)), 5].min" />
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $Claimspacelist.{$ClaimspaceCounter}.name + ' - Ships: ' + $PossibleFactionMilShips.count + ' - Sectors: ' + $PossibleFactionSectors.count + ' - MilStrengthFactor: ' + $PossibleFactionMilStrength.{$ClaimspaceCounter}" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$PossibleFactionMilShips" />
									<remove_value name="$PossibleFactionSectors" />
									<remove_value name="$MilStrengthDebug" />
								</do_all>
								<remove_value name="$DynamicWarEventFactionMilShips" />
								<remove_value name="$DynamicWarEventFactionSectors" />
								<remove_value name="$ClaimspaceCounter" />
							</do_if>
						</do_if>
					</actions>
				</library>
				<library name="DynamicWarCalculateChance">
					<actions>
						<!-- set up the table if not already set up -->
						<do_if value="(not $FactionTable?)">
							<set_value name="$FactionTable" exact="table[]" />
						</do_if>
						<!-- use FactionTableList from above -->
						<!-- update chance only after factions have been selected -->
						<do_if value="$DynamicWarEventFaction? and $DynamicWarEventFactionTwo?">
							<do_all exact="$FactionTableList.count" counter="$FactionTableListCounter">
								<do_if value="($FactionTableList.{$FactionTableListCounter} == $DynamicWarEventFaction) or ($FactionTableList.{$FactionTableListCounter} == $DynamicWarEventFactionTwo)">
									<set_value name="$FactionTable.{$FactionTableList.{$FactionTableListCounter}}" exact="if $FactionTable.{$FactionTableList.{$FactionTableListCounter}}? then [$FactionTable.{$FactionTableList.{$FactionTableListCounter}} - 15, 1].max else 5" />
								</do_if>
								<do_else>
									<set_value name="$FactionTable.{$FactionTableList.{$FactionTableListCounter}}" exact="if $FactionTable.{$FactionTableList.{$FactionTableListCounter}}? then [$FactionTable.{$FactionTableList.{$FactionTableListCounter}} + 5, 50].min else 20" />
								</do_else>
							</do_all>
						</do_if>
						<!-- if factions have not been selected, we want to return a chance value -->
						<do_if value="(not $DynamicWarEventFaction?) or (not $DynamicWarEventFactionTwo?)">
							<do_all exact="$Claimspacelist.count" counter="$ClaimspaceCounter">
								<do_if value="$Claimspacelist.{$ClaimspaceCounter} != null">
									<append_to_list name="$PossibleFactionChance" exact="if $FactionTable.{$Claimspacelist.{$ClaimspaceCounter}}? then $FactionTable.{$Claimspacelist.{$ClaimspaceCounter}} else 15" />
								</do_if>
							</do_all>
						</do_if>
					</actions>
				</library>
			</cues>
		</cue>
	</cues>
</mdscript>
