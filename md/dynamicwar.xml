<?xml version="1.0" encoding="utf-8"?>
<mdscript name="DynamicWar" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<cue name="Init">
			<actions>
				<do_if value="(not $ArgonCoalition?) or (not $TeladiCoalition?) or (not $ParanidCoalition?) or (not $HolyOrderCoalition?) or (not $PirateCoalition?)">
					<set_value name="$ArgonCoalition" exact="[faction.antigone, faction.argon, faction.hatikvah]"/>
					<set_value name="$HolyOrderCoalition" exact="[faction.holyorder]"/>
					<set_value name="$ParanidCoalition" exact="[faction.alliance, faction.paranid]"/>
					<set_value name="$TeladiCoalition" exact="[faction.ministry, faction.teladi]"/>
					<set_value name="$PirateCoalition" exact="[faction.scaleplate]"/>
				</do_if>
				<!-- Set up dynamic chance values -->
				<do_if value="(not $DynamicWarEventArgonChance?) or (not $DynamicWarEventHolyOrderChance?) or (not $DynamicWarEventParanidChance?) or (not $DynamicWarEventTeladiChance?) or (not $DynamicWarEventPirateChance?)">
					<set_value name="$DynamicWarEventArgonChance" exact="20" />
					<set_value name="$DynamicWarEventHolyOrderChance" exact="20" />
					<set_value name="$DynamicWarEventParanidChance" exact="20" />
					<set_value name="$DynamicWarEventTeladiChance" exact="20" />
					<set_value name="$DynamicWarEventPirateChance" exact="20" />
				</do_if>
				<do_if value="(not $ArgonMilStrengthFactor?) or (not $HolyOrderMilStrengthFactor?) or (not $ParanidMilStrengthFactor?) or (not $TeladiMilStrengthFactor?) or (not $PirateMilStrengthFactor?)">
					<set_value name="$ArgonMilStrengthFactor" exact="1" />
					<set_value name="$HolyOrderMilStrengthFactor" exact="1" />
					<set_value name="$ParanidMilStrengthFactor" exact="1" />
					<set_value name="$TeladiMilStrengthFactor" exact="1" />
					<set_value name="$PirateMilStrengthFactor" exact="1" />
				</do_if>
				<set_value name="$InitDebug" exact="'$ArgonCoalition = ' + $ArgonCoalition + ' / $HolyOrderCoalition = ' + $HolyOrderCoalition + ' / $ParanidCoalition = ' + $ParanidCoalition + ' / $TeladiCoalition = ' + $TeladiCoalition + ' / $PirateCoalition = ' + $PirateCoalition" />
				<debug_to_file name="'DynamicWarInit'" directory="'DynamicWar'" text="$InitDebug" output="false" append="true" />
				<remove_value name="$InitDebug" />
			</actions>
			<cues>
				<cue name="DynamicWarTimer" instantiate="true" checkinterval="30min" checktime="player.age + 5min">
					<actions>
						<signal_cue_instantly cue="DynamicWarEventSelector" />
					</actions>
				</cue>
				<!-- This is where debug goes
				<cue name="DynamicWarDebug" instantiate="true" >
					<conditions>
						<event_long_range_scan_sent object="player.entity"/>
					</conditions>
					<actions>
						<signal_cue_instantly cue="DynamicWarEventSelector" />
					</actions>
				</cue>
				This is where it ends -->
				<cue name="DynamicWarEventSelector" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<do_if value="$DynamicWarEvent?">
							<remove_value name="$DynamicWarEvent" />
						</do_if>
						<!-- Choose event type -->
						<do_any>
							<set_value name="$DynamicWarEvent" exact="'Besties'" weight="5" />
							<set_value name="$DynamicWarEvent" exact="'BigBoost'" weight="25" />
							<set_value name="$DynamicWarEvent" exact="'SmallBoost'" weight="50" />
							<set_value name="$DynamicWarEvent" exact="'SmallBlow'" weight="50" />
							<set_value name="$DynamicWarEvent" exact="'BigBlow'" weight="25" />
							<set_value name="$DynamicWarEvent" exact="'Nemesis'" weight="5" />
							<set_value name="$DynamicWarEvent" exact="'Nothing'" weight="1" />
						</do_any>
						<!--<set_value name="$DynamicWarLogicDebug" exact="'DynamicWarEvent = ' + $DynamicWarEvent + ' - DynamicWarEventFaction = ' + $DynamicWarEventFaction + ' - DynamicWarEventFactionTwo = ' + $DynamicWarEventFactionTwo" />
						<debug_to_file name="'DynamicWarLogic'" directory="'DynamicWar'" text="$DynamicWarLogicDebug" output="false" append="true" />-->
						<!-- If nothing then we don't need to do any more processing -->
						<do_if value="$DynamicWarEventFaction?">
							<remove_value name="$DynamicWarEventFaction" />
						</do_if>
						<do_if value="$DynamicWarEvent != 'Nothing'">
							<!-- Select $FactionOne -->
							<do_any>
								<set_value name="$DynamicWarEventFaction" exact="$ArgonCoalition" weight="$DynamicWarEventArgonChance" />
								<set_value name="$DynamicWarEventFaction" exact="$HolyOrderCoalition" weight="$DynamicWarEventHolyOrderChance" />
								<set_value name="$DynamicWarEventFaction" exact="$ParanidCoalition" weight="$DynamicWarEventParanidChance" />
								<set_value name="$DynamicWarEventFaction" exact="$TeladiCoalition" weight="$DynamicWarEventTeladiChance" />
								<set_value name="$DynamicWarEventFaction" exact="$PirateCoalition" weight="$DynamicWarEventPirateChance" />
							</do_any>
							<do_if value="$DynamicWarEventFactionTwo?">
								<remove_value name="$DynamicWarEventFactionTwo" />
							</do_if>
							<!-- Select $FactionTwo -->
							<do_if value="$DynamicWarEventFaction == $ArgonCoalition">
								<include_actions ref="DynamicWarCalculateMilStrengthFactor" />
								<do_any>
									<set_value name="$DynamicWarEventFactionTwo" exact="$HolyOrderCoalition" weight="($DynamicWarEventHolyOrderChance * $HolyOrderMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$ParanidCoalition" weight="($DynamicWarEventParanidChance * $ParanidMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$TeladiCoalition" weight="($DynamicWarEventTeladiChance * $TeladiMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$PirateCoalition" weight="($DynamicWarEventPirateChance * $PirateMilStrengthFactor)" />
								</do_any>
							</do_if>
							<do_if value="$DynamicWarEventFaction == $HolyOrderCoalition">
								<include_actions ref="DynamicWarCalculateMilStrengthFactor" />
								<do_any>
									<set_value name="$DynamicWarEventFactionTwo" exact="$ArgonCoalition" weight="($DynamicWarEventArgonChance * $ArgonMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$ParanidCoalition" weight="($DynamicWarEventParanidChance * $ParanidMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$TeladiCoalition" weight="($DynamicWarEventTeladiChance * $TeladiMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$PirateCoalition" weight="($DynamicWarEventPirateChance * $PirateMilStrengthFactor)" />
								</do_any>
							</do_if>
							<do_if value="$DynamicWarEventFaction == $ParanidCoalition">
								<include_actions ref="DynamicWarCalculateMilStrengthFactor" />
								<do_any>
									<set_value name="$DynamicWarEventFactionTwo" exact="$ArgonCoalition" weight="($DynamicWarEventArgonChance * $ArgonMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$HolyOrderCoalition" weight="($DynamicWarEventHolyOrderChance * $HolyOrderMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$TeladiCoalition" weight="($DynamicWarEventTeladiChance * $TeladiMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$PirateCoalition" weight="($DynamicWarEventPirateChance * $PirateMilStrengthFactor)" />
								</do_any>
							</do_if>
							<do_if value="$DynamicWarEventFaction == $TeladiCoalition">
								<include_actions ref="DynamicWarCalculateMilStrengthFactor" />
								<do_any>
									<set_value name="$DynamicWarEventFactionTwo" exact="$ArgonCoalition" weight="($DynamicWarEventArgonChance * $ArgonMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$HolyOrderCoalition" weight="($DynamicWarEventHolyOrderChance * $HolyOrderMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$ParanidCoalition" weight="($DynamicWarEventParanidChance * $ParanidMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$PirateCoalition" weight="($DynamicWarEventPirateChance * $PirateMilStrengthFactor)" />
								</do_any>
							</do_if>
							<do_if value="$DynamicWarEventFaction == $PirateCoalition">
								<include_actions ref="DynamicWarCalculateMilStrengthFactor" />
								<do_any>
									<set_value name="$DynamicWarEventFactionTwo" exact="$ArgonCoalition" weight="($DynamicWarEventArgonChance * $ArgonMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$HolyOrderCoalition" weight="($DynamicWarEventHolyOrderChance * $HolyOrderMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$ParanidCoalition" weight="($DynamicWarEventParanidChance * $ParanidMilStrengthFactor)" />
									<set_value name="$DynamicWarEventFactionTwo" exact="$TeladiCoalition" weight="($DynamicWarEventTeladiChance * $TeladiMilStrengthFactor)" />
								</do_any>
							</do_if>
							<!-- Debug info -->
							<set_value name="$FactionSelectionDebug" exact="player.age + ' - ' + $DynamicWarEvent + ' - ' + $DynamicWarEventFaction + ' and ' + $DynamicWarEventFactionTwo" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug" output="false" append="true" />
							<set_value name="$FactionSelectionDebug2" exact="player.age + ' - ' + 'DynamicWarEventArgonChance:' + $DynamicWarEventArgonChance + ' - ' + 'DynamicWarEventHolyOrderChance:' + $DynamicWarEventHolyOrderChance + ' - ' + 'DynamicWarEventParanidChance:' + $DynamicWarEventParanidChance + ' - ' + 'DynamicWarEventTeladiChance:' + $DynamicWarEventTeladiChance + ' - ' + 'DynamicWarEventPirateChance:' + $DynamicWarEventPirateChance" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug2" output="false" append="true" />
							<set_value name="$FactionSelectionDebug3" exact="player.age + ' - ' + 'ArgonMilStrengthFactor:' + $ArgonMilStrengthFactor + ' - ' + 'HolyOrderMilStrengthFactor:' + $HolyOrderMilStrengthFactor + ' - ' + 'ParanidMilStrengthFactor:' + $ParanidMilStrengthFactor + ' - ' + 'TeladiMilStrengthFactor:' + $TeladiMilStrengthFactor + ' - ' + 'PirateMilStrengthFactor:' + $PirateMilStrengthFactor" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug3" output="false" append="true" />
							<set_value name="$FactionSelectionDebug4" exact="player.age + ' - ' + 'CombinedArgonChance:' + ($DynamicWarEventArgonChance * $ArgonMilStrengthFactor) + ' - ' + 'CombinedHolyOrderChance:' + ($DynamicWarEventHolyOrderChance * $HolyOrderMilStrengthFactor) + ' - ' + 'CombinedParanidChance:' + ($DynamicWarEventParanidChance * $ParanidMilStrengthFactor) + ' - ' + 'CombinedTeladiChance:' + ($DynamicWarEventTeladiChance * $TeladiMilStrengthFactor) + ' - ' + 'CombinedPirateChance:' + ($DynamicWarEventPirateChance * $PirateMilStrengthFactor)" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$FactionSelectionDebug4" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="' '" output="false" append="true" />
							
							<do_if value="($DynamicWarEventFaction == $ArgonCoalition) or ($DynamicWarEventFactionTwo == $ArgonCoalition)">
								<set_value name="$DynamicWarEventArgonChance" exact="([$DynamicWarEventArgonChance - 10, 1].max)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction == $HolyOrderCoalition) or ($DynamicWarEventFactionTwo == $HolyOrderCoalition)">
								<set_value name="$DynamicWarEventHolyOrderChance" exact="([$DynamicWarEventHolyOrderChance - 10, 1].max)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction == $ParanidCoalition) or ($DynamicWarEventFactionTwo == $ParanidCoalition)">
								<set_value name="$DynamicWarEventParanidChance" exact="([$DynamicWarEventParanidChance - 10, 1].max)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction == $TeladiCoalition) or ($DynamicWarEventFactionTwo == $TeladiCoalition)">
								<set_value name="$DynamicWarEventTeladiChance" exact="([$DynamicWarEventTeladiChance - 10, 1].max)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction == $PirateCoalition) or ($DynamicWarEventFactionTwo == $PirateCoalition)">
								<set_value name="$DynamicWarEventPirateChance" exact="([$DynamicWarEventPirateChance - 10, 1].max)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction != $ArgonCoalition) and ($DynamicWarEventFactionTwo != $ArgonCoalition)">
								<set_value name="$DynamicWarEventArgonChance" exact="($DynamicWarEventArgonChance + 5)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction != $HolyOrderCoalition) and ($DynamicWarEventFactionTwo != $HolyOrderCoalition)">
								<set_value name="$DynamicWarEventHolyOrderChance" exact="($DynamicWarEventHolyOrderChance + 5)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction != $ParanidCoalition) and ($DynamicWarEventFactionTwo != $ParanidCoalition)">
								<set_value name="$DynamicWarEventParanidChance" exact="($DynamicWarEventParanidChance + 5)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction != $TeladiCoalition) and ($DynamicWarEventFactionTwo != $TeladiCoalition)">
								<set_value name="$DynamicWarEventTeladiChance" exact="($DynamicWarEventTeladiChance + 5)" />
							</do_if>
							<do_if value="($DynamicWarEventFaction != $PirateCoalition) and ($DynamicWarEventFactionTwo != $PirateCoalition)">
								<set_value name="$DynamicWarEventPirateChance" exact="($DynamicWarEventPirateChance + 5)" />
							</do_if>
							<include_actions ref="DynamicWarEventExecute" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'Nothing'">
							<set_value name="$NothingDebug" exact="player.age + ' - ' + $DynamicWarEvent" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="$NothingDebug" output="false" append="true" />
							<debug_to_file name="'DynamicWarEventSelector'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<remove_value name="$DynamicWarEvent" />
						<remove_value name="$DynamicWarEventFaction" />
						<remove_value name="$DynamicWarEventFactionTwo" />
					</actions>
				</cue>
				<library name="DynamicWarEventExecute">
					<actions>
						<!--Break time -->
						<do_if value="$DynamicWarEvent == 'BigBoost'">
							<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterA">
								<set_value name="$FactionOne" exact="$DynamicWarEventFaction.{$Param2CounterA}" />
								<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterA">
									<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo.{$Param3CounterA}" />
									<set_value name="$BigBoostDebug" exact="'Big Boost - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
									<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
									<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} + 0.1f, 1].min)" />
									<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, 1].min)" />
									<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
									<set_value name="$BigBoostDebug" exact="$BigBoostDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
									<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$BigBoostDebug" output="false" append="true" />
								</do_all>
							</do_all>
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBoost'">
							<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterB">
								<set_value name="$FactionOne" exact="$DynamicWarEventFaction.{$Param2CounterB}" />
								<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterB">
									<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo.{$Param3CounterB}" />
									<set_value name="$SmallBoostDebug" exact="'Small Boost - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
									<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
									<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} + 0.0032f, 1].min)" />
									<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, 1].min)" />
									<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
									<set_value name="$SmallBoostDebug" exact="$SmallBoostDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
									<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$SmallBoostDebug" output="false" append="true" />
								</do_all>
							</do_all>
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBlow'">
							<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterC">
								<set_value name="$FactionOne" exact="$DynamicWarEventFaction.{$Param2CounterC}" />
								<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterC">
									<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo.{$Param3CounterC}" />
									<set_value name="$SmallBlowDebug" exact="'Small Blow - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
									<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
									<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} - 0.0032f, -1].max)" />
									<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, -1].max)" />
									<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
									<set_value name="$SmallBlowDebug" exact="$SmallBlowDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
									<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$SmallBlowDebug" output="false" append="true" />
								</do_all>
							</do_all>
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'BigBlow'">
							<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterD">
								<set_value name="$FactionOne" exact="$DynamicWarEventFaction.{$Param2CounterD}" />
								<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterD">
									<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo.{$Param3CounterD}" />
									<set_value name="$BigBlowDebug" exact="'Big Blow - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
									<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
									<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} - 0.1f, -1].max)" />
									<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, -1].max)" />
									<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
									<set_value name="$BigBlowDebug" exact="$BigBlowDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
									<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$BigBlowDebug" output="false" append="true" />
								</do_all>
							</do_all>
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'Nemesis'">
							<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterE">
								<set_value name="$FactionOne" exact="$DynamicWarEventFaction.{$Param2CounterE}" />
								<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterE">
									<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo.{$Param3CounterE}" />
									<set_value name="$NemesisDebug" exact="'Nemesis - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
									<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
									<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="-1.0" />
									<set_value name="$NewRelation" exact="-1.0" />
									<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
									<set_value name="$NemesisDebug" exact="$NemesisDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
									<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$NemesisDebug" output="false" append="true" />
								</do_all>
							</do_all>
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<do_if value="$DynamicWarEvent == 'Besties'">
							<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterF">
								<set_value name="$FactionOne" exact="$DynamicWarEventFaction.{$Param2CounterF}" />
								<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterF">
									<set_value name="$FactionTwo" exact="$DynamicWarEventFactionTwo.{$Param3CounterF}" />
									<set_value name="$BestiesDebug" exact="'Big Boost - ' + $FactionOne + ' and ' + $FactionTwo + ' - Before: ' + $FactionOne.relationto.{$FactionTwo}" />
									<set_value name="$OldRelation" exact="$FactionOne.relationto.{$FactionTwo}" />
									<set_faction_relation faction="$FactionOne" otherfaction="$FactionTwo" value="([$FactionOne.relationto.{$FactionTwo} + 0.1f, 1].min)" />
									<set_value name="$NewRelation" exact="([$FactionOne.relationto.{$FactionTwo}, 1].min)" />
									<set_faction_relation faction="$FactionTwo" otherfaction="$FactionOne" value="$NewRelation" />
									<set_value name="$BestiesDebug" exact="$BestiesDebug + ' - After: ' + $FactionOne.relationto.{$FactionTwo}" />
									<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="$BestiesDebug" output="false" append="true" />
								</do_all>
							</do_all>
							<debug_to_file name="'DynamicWarEventExecute'" directory="'DynamicWar'" text="' '" output="false" append="true" />
						</do_if>
						<include_actions ref="DynamicWarEventNotification" />
					</actions>
				</library>
				<library name="DynamicWarEventNotification">
					<actions>
						<!-- Big ups to Jack the Stripper(marksmango) for ideas-->
						<!-- New notification logic and examples for my brain to process [faction.one, faction.two, faction.three, faction.four]-->
						<!-- One Name, Two Name, Three Name, and Four Name-->
						<do_all exact="$DynamicWarEventFaction.count" counter="$Param2CounterG">
							<!-- One of One -->
							<do_if value="($Param2CounterG == $DynamicWarEventFaction.count) and ($Param2CounterG == 1)">
								<set_value name="$FactionOneNames" exact="$DynamicWarEventFaction.{$Param2CounterG}.name" />
							</do_if>
							<!-- One of how many -->
							<do_if value="($Param2CounterG != $DynamicWarEventFaction.count) and ($Param2CounterG == 1)">
								<set_value name="$FactionOneNames" exact="$DynamicWarEventFaction.{$Param2CounterG}.name" />
							</do_if>
							<!-- Middle element can cause duplicate commas, need a condition -->
							<do_if value="($Param2CounterG != $DynamicWarEventFaction.count) and ($Param2CounterG != 1) and ($DynamicWarEventFaction.count == 3)">
								<set_value name="$FactionOneNames" exact="$FactionOneNames + ', ' + $DynamicWarEventFaction.{$Param2CounterG}.name" />
							</do_if>
							<!-- Middle element of any number -->
							<do_if value="($Param2CounterG != $DynamicWarEventFaction.count) and ($Param2CounterG != 1) and ($DynamicWarEventFaction.count != 3)">
								<set_value name="$FactionOneNames" exact="$FactionOneNames + ', ' + $DynamicWarEventFaction.{$Param2CounterG}.name" />
							</do_if>
							<!-- Two of Two-->
							<do_if value="($Param2CounterG == $DynamicWarEventFaction.count) and ($Param2CounterG != 1) and ($DynamicWarEventFaction.count == 2)">
								<set_value name="$FactionOneNames" exact="$FactionOneNames + ' and ' + $DynamicWarEventFaction.{$Param2CounterG}.name" />
							</do_if>
							<!-- Last element of more than 2 -->
							<do_if value="($Param2CounterG == $DynamicWarEventFaction.count) and ($Param2CounterG != 1) and ($DynamicWarEventFaction.count != 2)">
								<set_value name="$FactionOneNames" exact="$FactionOneNames + ', and ' + $DynamicWarEventFaction.{$Param2CounterG}.name" />
							</do_if>
						</do_all>
						<!-- Grammar is kind of important -->
						<set_value name="$IsAre" exact="' are '" />
						<do_if value="$DynamicWarEventFaction.count == 1">
							<set_value name="$IsAre" exact="' is '" />
						</do_if>
						<!-- Repeat for DynamicWarEventFactionTwo -->
						<do_all exact="$DynamicWarEventFactionTwo.count" counter="$Param3CounterG">
							<!-- One of One -->
							<do_if value="($Param3CounterG == $DynamicWarEventFactionTwo.count) and ($Param3CounterG == 1)">
								<set_value name="$FactionTwoNames" exact="$DynamicWarEventFactionTwo.{$Param3CounterG}.name" />
							</do_if>
							<!-- One of how many -->
							<do_if value="($Param3CounterG != $DynamicWarEventFactionTwo.count) and ($Param3CounterG == 1)">
								<set_value name="$FactionTwoNames" exact="$DynamicWarEventFactionTwo.{$Param3CounterG}.name" />
							</do_if>
							<!-- Middle element can cause duplicate commas, need a condition -->
							<do_if value="($Param3CounterG != $DynamicWarEventFactionTwo.count) and ($Param3CounterG != 1) and ($DynamicWarEventFactionTwo.count == 3)">
								<set_value name="$FactionTwoNames" exact="$FactionTwoNames + ', ' + $DynamicWarEventFactionTwo.{$Param3CounterG}.name" />
							</do_if>
							<!-- Middle element of any number -->
							<do_if value="($Param3CounterG != $DynamicWarEventFactionTwo.count) and ($Param3CounterG != 1) and ($DynamicWarEventFactionTwo.count != 3)">
								<set_value name="$FactionTwoNames" exact="$FactionTwoNames + ', ' + $DynamicWarEventFactionTwo.{$Param3CounterG}.name" />
							</do_if>
							<!-- Two of Two-->
							<do_if value="($Param3CounterG == $DynamicWarEventFactionTwo.count) and ($Param3CounterG != 1) and ($DynamicWarEventFactionTwo.count == 2)">
								<set_value name="$FactionTwoNames" exact="$FactionTwoNames + ' and ' + $DynamicWarEventFactionTwo.{$Param3CounterG}.name" />
							</do_if>
							<!-- Last element of more than 2 -->
							<do_if value="($Param3CounterG == $DynamicWarEventFactionTwo.count) and ($Param3CounterG != 1) and ($DynamicWarEventFactionTwo.count != 2)">
								<set_value name="$FactionTwoNames" exact="$FactionTwoNames + ', and ' + $DynamicWarEventFactionTwo.{$Param3CounterG}.name" />
							</do_if>
						</do_all>
						
						<do_if value="$DynamicWarEvent == 'BigBoost' or ($DynamicWarEvent == 'Besties')">
							<do_if value="($OldRelation ge 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are considered close allies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Completion of a non-agression pact has led to improved relations between ' + $FactionOneNames + ' and ' + $FactionTwoNames + '.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Completion of a joint resources expedition has led to improved relations between ' + $FactionOneNames + ' and ' + $FactionTwoNames + '.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation ge 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are now at peace and considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are now at peace and considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly improved their relations with ' + $FactionTwoNames + '. They are now at peace and considered close allies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="8" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Completion of a major trade deal between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has led to peace.'" weight="25"/>
									<set_value name="$FlavorText" exact="'After wide scale protests crying for peace, ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' have signed a peace treaty.'" weight="25"/>
									<set_value name="$FlavorText" exact="'After a near disasterous fight with the Xenon. ' + $FactionTwoNames + ' sent ships to save the fleet of ' + $FactionOneNames + '. The two factions decided to settle their differences.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has improved their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has improved their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has improved their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced conflict between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly improved relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced deception between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly improved relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBoost'">
							<do_if value="($OldRelation ge 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slighty improved their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="5" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Increased trade between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly improved relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Increased tourism between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly improved relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation ge 0)">
								<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at peace with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'After a public request by Jack the Stripper, famous highway architect, ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' have ended their war.'" weight="25"/>
									<set_value name="$FlavorText" exact="'An armistice treaty signed by ' + $FactionOneNames + ' and ' + $FactionTwoNames + '. Prisoners have been exchanged and there is a fragile peace for now.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly improved their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced conflict between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slighty improved relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced deception between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly improved relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
						<do_if value="$DynamicWarEvent == 'SmallBlow'">
							<do_if value="($OldRelation gt 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced trade between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced tourism between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has slightly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war with their nemesis. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="5" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Increased conflict between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Increased distrust between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has slightly worsened relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation ge 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now enemies with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with their nemesis, ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="7" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Citing previous border disputes, ' + $FactionOneNames + ' has declared war on ' + $FactionTwoNames + ' to protect their galactic sovereignty.'" weight="25"/>
									<set_value name="$FlavorText" exact="'After a failed non-agression pact, the relations between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' have deteriorated into a minor conflict.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
						<do_if value="($DynamicWarEvent == 'BigBlow') or ($DynamicWarEvent == 'Nemesis')">
							<do_if value="($OldRelation gt 0) and ($NewRelation gt 0)">
								<do_if value="($NewRelation gt 0) and ($NewRelation lt 0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered friends. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation ge 0.1) and ($NewRelation lt 1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered federation members. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'Reduced trade between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly worsened relations.'" weight="25"/>
									<set_value name="$FlavorText" exact="'Reduced tourism between ' + $FactionOneNames + ' and ' + $FactionTwoNames + ' has greatly worsened relations.'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation lt 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered enemies. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are considered at war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + ' has greatly worsened their relations with ' + $FactionTwoNames + '. They are at all-out war with their nemesis. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="6" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'A prominent coalition leader of ' + $FactionOneNames + ' has declared to build a wall blocking ' + $FactionTwoNames + ' and to make them pay for it. Relations have greatly worsened'" weight="25"/>
									<set_value name="$FlavorText" exact="'A prominent coalition leader of ' + $FactionOneNames + ' has called for the destruction of ' + $FactionTwoNames + ' during a state of the union address. Relations have greatly worsened'" weight="25"/>
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
									<!--<set_value name="$FlavorText" exact="'Story'" weight="25"/>-->
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
							<do_if value="($OldRelation ge 0) and ($NewRelation lt 0)">
								<do_if value="($NewRelation lt 0) and ($NewRelation gt -0.1)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now enemies with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.1) and ($NewRelation gt -0.32)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation le -0.32) and ($NewRelation gt -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<do_if value="($NewRelation == -1.0)">
									<set_value name="$Message" exact="$FactionOneNames + $IsAre + 'now at all-out war with their nemesis, ' + $FactionTwoNames + '. ' + $FactionOne.relation.{$FactionOne.relationto.{$FactionTwo}}.uivalue" />
								</do_if>
								<show_notification priority="8" text="$Message" />
								<do_any>
									<set_value name="$FlavorText" exact="'A ship carrying water to a station experiencing a critical shortage was destroyed by ' + $FactionTwoNames + ' extremeists. ' + $FactionOneNames + ' has declared war in retaliation.'" weight="25"/>
									<set_value name="$FlavorText" exact="'A coalition ambassador of ' + $FactionOneNames + ' was assasinated. Evidence points to a deep-cover agent of ' + $FactionTwoNames + ' coalition. War has erupted.'" weight="25"/>
									<set_value name="$FlavorText" exact="'A new captain of ' + $FactionTwoNames + ' coalition fired upon a luxury passenger ship belonging to ' + $FactionOneNames + ' coalition, thought to be smuggling criminals. ' + $FactionOneNames + ' swiftly declared war.'" weight="25"/>
									<set_value name="$FlavorText" exact="'A rogue faction logic AI designed by Mysterial has caused phantom fleet orders to invade ' + $FactionTwoNames + ' space. ' + $FactionOneNames + ' has immediately declared all out war.'" weight="25"/>
								</do_any>
								<write_to_logbook category="news" title="$Message" text="$FlavorText" />
							</do_if>
						</do_if>
					</actions>
				</library>
				<library name="DynamicWarCalculateMilStrengthFactor">
					<actions>
						<do_if value="$DynamicWarEventFaction? and $DynamicWarEvent?">
							<!-- Comparison favors weakness -->
							<do_if value="($DynamicWarEvent == 'BigBoost') or ($DynamicWarEvent == 'Besties') or ($DynamicWarEvent == 'SmallBoost')">
								
								<do_all exact="$DynamicWarEventFaction.count" counter="$DynamicWarEventFactionMilStrengthCounter">
									<find_ship_by_true_owner groupname="$DynamicWarEventFactionMilShips" space="player.galaxy" multiple="true" faction="$DynamicWarEventFaction.{$DynamicWarEventFactionMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
									<find_sector groupname="$DynamicWarEventFactionSectors" space="player.galaxy" multiple="true" owner="$DynamicWarEventFaction.{$DynamicWarEventFactionMilStrengthCounter}" append="true" />
								</do_all>
								<!-- Debug line -->
								<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $DynamicWarEvent + ' - ' + $DynamicWarEventFaction + ' - Ships: ' + $DynamicWarEventFactionMilShips.count + ' - Sectors: ' + $DynamicWarEventFactionSectors.count" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
								
								<do_if value="$DynamicWarEventFaction != $ArgonCoalition">
									<do_all exact="$ArgonCoalition.count" counter="$ArgonMilStrengthCounter">
										<find_ship_by_true_owner groupname="$ArgonMilShips" space="player.galaxy" multiple="true" faction="$ArgonCoalition.{$ArgonMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$ArgonSectors" space="player.galaxy" multiple="true" owner="$ArgonCoalition.{$ArgonMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$ArgonMilStrengthFactor" exact="1 + ((1 - ($DynamicWarEventFactionMilShips.count)f / ($ArgonMilShips.count)f) * (1 - ($DynamicWarEventFactionMilShips.count)f / ($ArgonMilShips.count)f) + (1 - ($DynamicWarEventFactionSectors.count)f / ($ArgonSectors.count)f) * (1 - ($DynamicWarEventFactionSectors.count)f / ($ArgonSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $ArgonCoalition + ' - Ships: ' + $ArgonMilShips.count + ' - Sectors: ' + $ArgonSectors.count + ' - MilStrengthFactor: ' + $ArgonMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$ArgonMilShips" />
									<remove_value name="$ArgonSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $HolyOrderCoalition">
									<do_all exact="$HolyOrderCoalition.count" counter="$HolyOrderMilStrengthCounter">
										<find_ship_by_true_owner groupname="$HolyOrderMilShips" space="player.galaxy" multiple="true" faction="$HolyOrderCoalition.{$HolyOrderMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$HolyOrderSectors" space="player.galaxy" multiple="true" owner="$HolyOrderCoalition.{$HolyOrderMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$HolyOrderMilStrengthFactor" exact="1 + ((1 - ($DynamicWarEventFactionMilShips.count)f / ($HolyOrderMilShips.count)f) * (1 - ($DynamicWarEventFactionMilShips.count)f / ($HolyOrderMilShips.count)f) + (1 - ($DynamicWarEventFactionSectors.count)f / ($HolyOrderSectors.count)f) * (1 - ($DynamicWarEventFactionSectors.count)f / ($HolyOrderSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $HolyOrderCoalition + ' - Ships: ' + $HolyOrderMilShips.count + ' - Sectors: ' + $HolyOrderSectors.count + ' - MilStrengthFactor: ' + $HolyOrderMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$HolyOrderMilShips" />
									<remove_value name="$HolyOrderSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $ParanidCoalition">
									<do_all exact="$ParanidCoalition.count" counter="$ParanidMilStrengthCounter">
										<find_ship_by_true_owner groupname="$ParanidMilShips" space="player.galaxy" multiple="true" faction="$ParanidCoalition.{$ParanidMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$ParanidSectors" space="player.galaxy" multiple="true" owner="$ParanidCoalition.{$ParanidMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$ParanidMilStrengthFactor" exact="1 + ((1 - ($DynamicWarEventFactionMilShips.count)f / ($ParanidMilShips.count)f) * (1 - ($DynamicWarEventFactionMilShips.count)f / ($ParanidMilShips.count)f) + (1 - ($DynamicWarEventFactionSectors.count)f / ($ParanidSectors.count)f) * (1 - ($DynamicWarEventFactionSectors.count)f / ($ParanidSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $ParanidCoalition + ' - Ships: ' + $ParanidMilShips.count + ' - Sectors: ' + $ParanidSectors.count + ' - MilStrengthFactor: ' + $ParanidMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$ParanidMilShips" />
									<remove_value name="$ParanidSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $TeladiCoalition">
									<do_all exact="$TeladiCoalition.count" counter="$TeladiMilStrengthCounter">
										<find_ship_by_true_owner groupname="$TeladiMilShips" space="player.galaxy" multiple="true" faction="$TeladiCoalition.{$TeladiMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$TeladiSectors" space="player.galaxy" multiple="true" owner="$TeladiCoalition.{$TeladiMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$TeladiMilStrengthFactor" exact="1 + ((1 - ($DynamicWarEventFactionMilShips.count)f / ($TeladiMilShips.count)f) * (1 - ($DynamicWarEventFactionMilShips.count)f / ($TeladiMilShips.count)f) + (1 - ($DynamicWarEventFactionSectors.count)f / ($TeladiSectors.count)f) * (1 - ($DynamicWarEventFactionSectors.count)f / ($TeladiSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $TeladiCoalition + ' - Ships: ' + $TeladiMilShips.count + ' - Sectors: ' + $TeladiSectors.count + ' - MilStrengthFactor: ' + $TeladiMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$TeladiMilShips" />
									<remove_value name="$TeladiSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $PirateCoalition">
									<do_all exact="$PirateCoalition.count" counter="$PirateMilStrengthCounter">
										<find_ship_by_true_owner groupname="$PirateMilShips" space="player.galaxy" multiple="true" faction="$PirateCoalition.{$PirateMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$PirateSectors" space="player.galaxy" multiple="true" owner="$PirateCoalition.{$PirateMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$PirateMilStrengthFactor" exact="1 + ((1 - ($DynamicWarEventFactionMilShips.count)f / ($PirateMilShips.count)f) * (1 - ($DynamicWarEventFactionMilShips.count)f / ($PirateMilShips.count)f) + (1 - ($DynamicWarEventFactionSectors.count)f / ($PirateSectors.count)f) * (1 - ($DynamicWarEventFactionSectors.count)f / ($PirateSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $PirateCoalition + ' - Ships: ' + $PirateMilShips.count + ' - Sectors: ' + $PirateSectors.count + ' - MilStrengthFactor: ' + $PirateMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$PirateMilShips" />
									<remove_value name="$PirateSectors" />
								</do_if>
								<remove_value name="$DynamicWarEventFactionMilShips" />
								<remove_value name="$DynamicWarEventFactionSectors" />
							</do_if>
							<!-- Comparison favors strength -->
							<do_if value="($DynamicWarEvent == 'SmallBlow') or ($DynamicWarEvent == 'BigBlow') or ($DynamicWarEvent == 'Nemesis')">
								
								<do_all exact="$DynamicWarEventFaction.count" counter="$DynamicWarEventFactionMilStrengthCounter">
									<find_ship_by_true_owner groupname="$DynamicWarEventFactionMilShips" space="player.galaxy" multiple="true" faction="$DynamicWarEventFaction.{$DynamicWarEventFactionMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
									<find_sector groupname="$DynamicWarEventFactionSectors" space="player.galaxy" multiple="true" owner="$DynamicWarEventFaction.{$DynamicWarEventFactionMilStrengthCounter}" append="true" />
								</do_all>
								<!-- Debug line -->
								<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $DynamicWarEvent + ' - ' + $DynamicWarEventFaction + ' - Ships: ' + $DynamicWarEventFactionMilShips.count + ' - Sectors: ' + $DynamicWarEventFactionSectors.count" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
								<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
								
								<do_if value="$DynamicWarEventFaction != $ArgonCoalition">
									<do_all exact="$ArgonCoalition.count" counter="$ArgonMilStrengthCounter">
										<find_ship_by_true_owner groupname="$ArgonMilShips" space="player.galaxy" multiple="true" faction="$ArgonCoalition.{$ArgonMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$ArgonSectors" space="player.galaxy" multiple="true" owner="$ArgonCoalition.{$ArgonMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$ArgonMilStrengthFactor" exact="1 + ((1 - ($ArgonMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (1 - ($ArgonMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) + (1 - ($ArgonSectors.count)f / ($DynamicWarEventFactionSectors.count)f) * (1 - ($ArgonSectors.count)f / ($DynamicWarEventFactionSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $ArgonCoalition + ' - Ships: ' + $ArgonMilShips.count + ' - Sectors: ' + $ArgonSectors.count + ' - MilStrengthFactor: ' + $ArgonMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$ArgonMilShips" />
									<remove_value name="$ArgonSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $HolyOrderCoalition">
									<do_all exact="$HolyOrderCoalition.count" counter="$HolyOrderMilStrengthCounter">
										<find_ship_by_true_owner groupname="$HolyOrderMilShips" space="player.galaxy" multiple="true" faction="$HolyOrderCoalition.{$HolyOrderMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$HolyOrderSectors" space="player.galaxy" multiple="true" owner="$HolyOrderCoalition.{$HolyOrderMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$HolyOrderMilStrengthFactor" exact="1 + ((1 - ($HolyOrderMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (1 - ($HolyOrderMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) + (1 - ($HolyOrderSectors.count)f / ($DynamicWarEventFactionSectors.count)f) * (1 - ($HolyOrderSectors.count)f / ($DynamicWarEventFactionSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $HolyOrderCoalition + ' - Ships: ' + $HolyOrderMilShips.count + ' - Sectors: ' + $HolyOrderSectors.count + ' - MilStrengthFactor: ' + $HolyOrderMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$HolyOrderMilShips" />
									<remove_value name="$HolyOrderSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $ParanidCoalition">
									<do_all exact="$ParanidCoalition.count" counter="$ParanidMilStrengthCounter">
										<find_ship_by_true_owner groupname="$ParanidMilShips" space="player.galaxy" multiple="true" faction="$ParanidCoalition.{$ParanidMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$ParanidSectors" space="player.galaxy" multiple="true" owner="$ParanidCoalition.{$ParanidMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$ParanidMilStrengthFactor" exact="1 + ((1 - ($ParanidMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (1 - ($ParanidMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) + (1 - ($ParanidSectors.count)f / ($DynamicWarEventFactionSectors.count)f) * (1 - ($ParanidSectors.count)f / ($DynamicWarEventFactionSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $ParanidCoalition + ' - Ships: ' + $ParanidMilShips.count + ' - Sectors: ' + $ParanidSectors.count + ' - MilStrengthFactor: ' + $ParanidMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$ParanidMilShips" />
									<remove_value name="$ParanidSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $TeladiCoalition">
									<do_all exact="$TeladiCoalition.count" counter="$TeladiMilStrengthCounter">
										<find_ship_by_true_owner groupname="$TeladiMilShips" space="player.galaxy" multiple="true" faction="$TeladiCoalition.{$TeladiMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$TeladiSectors" space="player.galaxy" multiple="true" owner="$TeladiCoalition.{$TeladiMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$TeladiMilStrengthFactor" exact="1 + ((1 - ($TeladiMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (1 - ($TeladiMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) + (1 - ($TeladiSectors.count)f / ($DynamicWarEventFactionSectors.count)f) * (1 - ($TeladiSectors.count)f / ($DynamicWarEventFactionSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $TeladiCoalition + ' - Ships: ' + $TeladiMilShips.count + ' - Sectors: ' + $TeladiSectors.count + ' - MilStrengthFactor: ' + $TeladiMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$TeladiMilShips" />
									<remove_value name="$TeladiSectors" />
								</do_if>
								
								<do_if value="$DynamicWarEventFaction != $PirateCoalition">
									<do_all exact="$PirateCoalition.count" counter="$PirateMilStrengthCounter">
										<find_ship_by_true_owner groupname="$PirateMilShips" space="player.galaxy" multiple="true" faction="$PirateCoalition.{$PirateMilStrengthCounter}" primarypurpose="purpose.fight" append="true" />
										<find_sector groupname="$PirateSectors" space="player.galaxy" multiple="true" owner="$PirateCoalition.{$PirateMilStrengthCounter}" append="true" />
									</do_all>
									<set_value name="$PirateMilStrengthFactor" exact="1 + ((1 - ($PirateMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) * (1 - ($PirateMilShips.count)f / ($DynamicWarEventFactionMilShips.count)f) + (1 - ($PirateSectors.count)f / ($DynamicWarEventFactionSectors.count)f) * (1 - ($PirateSectors.count)f / ($DynamicWarEventFactionSectors.count)f))" />
									<!-- Debug line -->
									<set_value name="$MilStrengthDebug" exact="player.age + ' - ' + $PirateCoalition + ' - Ships: ' + $PirateMilShips.count + ' - Sectors: ' + $PirateSectors.count + ' - MilStrengthFactor: ' + $PirateMilStrengthFactor" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="$MilStrengthDebug" output="false" append="true" />
									<debug_to_file name="'DynamicWarCalculateMilStrengthFactor'" directory="'DynamicWar'" text="' '" output="false" append="true" />
									<remove_value name="$PirateMilShips" />
									<remove_value name="$PirateSectors" />
								</do_if>
								<remove_value name="$DynamicWarEventFactionMilShips" />
								<remove_value name="$DynamicWarEventFactionSectors" />
							</do_if>
						</do_if>
					</actions>
				</library>
			</cues>
		</cue>
	</cues>
</mdscript>
